name: Build and Deploy

on: 
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup .NET 8
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release 

  dockerize:
    needs: build
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build Docker image 
        run: docker build -t $DOCKER_USERNAME/taskapi -f Task.Api/Dockerfile .
      - name: Push Docker image
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker push $DOCKER_USERNAME/taskapi

  deploy:
    needs: dockerize
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to AWS server
      uses: appleboy/ssh-action@v0.1.2
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USER }}  # Ensure this is the correct username
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          # Stop and remove the existing container if it exists
          docker rm -f taskapi || true

          # Pull the latest image from Docker Hub
          docker pull $DOCKER_USERNAME/taskapi:latest

          # Start a new container
          docker run -d --name taskapi -p 85:8080 --restart always $DOCKER_USERNAME/taskapi:latest

